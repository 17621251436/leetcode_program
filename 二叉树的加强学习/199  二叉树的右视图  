# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def rightSideView(self, root: TreeNode) -> List[int]:
        res=[]
        view=[]
        queue=collecions.deque()
        queue.append(root)
        while queue:
            tmp=[]
            for _ in range(len(queue)):
                temp=queue.popleft()
                tmp.append(temp.val)
                if temp.left:
                    queue.append(temp.left)
                if temp.right:
                    queue.append(temp.right)
            res.append(temp)
        for item in res:
            view.append(item[-1])
        return view

        # res=[]
        # view=[]
        # queue=collections.deque()
        # queue.append(root)
        # while queue:
        #     tmp=[]
        #     for _ in range(len(queue)):
        #         v=queue.popleft()
        #         tmp.append(v.val)
        #         if v.left:
        #             queue.append(v.left)
        #         if v.right:
        #             queue.append(v.right)
        #     res.append(tmp)
        # for item in res:
        #     view.append(item[-1])
        # return view
        #
