class Codec:
    def serialize(self, root):
        if not root:
            return "[]"
        queue=collections.deque()
        queue.append(root)
        res=[]
        while queue:

             tmp=queue.popleft()

             if tmp:
                res.append(tmp.val)
                queue.append(tmp.left)

                queue.append(tmp.right)
             else:
                res.append("null")


        return '['+','.join(res)+']'
    def deserialize(self, data):
        if data="[]": return

        vals,i = data[1:-1].split(','),1 ## 1:-1去掉string的【 】
        root = TreeNode(int(vals[0]))
        queue=collections.deque()
        queue.append(root)

        while queue:
             node= queue.popleft()
             if vals[i]!="null" :
                 node.left=TreeNode(vals[i])
                 queue.append(node.left)
             i+=1
             if vals[i]!="null":
                 node.right=TreeNode(vals[i])
                 queue.append(node.right)
             i+=1
        return root
