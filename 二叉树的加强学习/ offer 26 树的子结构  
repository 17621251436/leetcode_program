# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSubStructure(self, A: TreeNode, B: TreeNode) -> bool:
        def similar(A,B):
            if not B and not A:
                return True
            if not A or not B:
                return False
            if A and B and A.val==B.val:
                return similar(A.left ,B.left) and similar(A.right,B.right)

        return similar(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.rigjt,B)












        #
        # if not A or not B:
        #     return False
        # def recur(A,B):
        #     if not B:
        #         return True
        #     if not A:
        #         return False
        #     if  A and B and A.val==B.val:
        #         return recur(A.left,B.left) and recur(A.right,B.right)
        # return recur(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.right,B)
        #
        #