class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        if not nums:
            return []
        check =[0 for _ in range(len(nums))]
        res=[]
        def backtree(nums,path,check):
            if len(nums)==len(path):
                res.append(path)
            for i in range(len(nums)):
                if check[i]==1:
                    continue
                if check[i-1] ==0 and i>0 and nums[i]==nums[i-1]:
                    continue
                check[i]=1
                dfs(nums, path + [nums[i]],check)
                check[i]=0
        backtree(nums,[],check)
        return res


         