# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:
        if not s and not t:
            return True

        if not s or not t:
            return False
        def recur(A,B):
            if not A and not B:
                return True
            if not A or not B:
                return False
            if A and B and A.val==B.val:
                return recur(A.left,B.left) and recur(A.right,B.right)
        return recur(s,t) or self.isSubtree(s.left,t) or self.isSubtree(s.right,t)